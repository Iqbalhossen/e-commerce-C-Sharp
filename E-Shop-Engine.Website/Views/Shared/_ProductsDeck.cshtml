@using E_Shop_Engine.Website.Extensions;
@using X.PagedList;
@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Common;
@using E_Shop_Engine.Website.Models;
@using E_Shop_Engine.Website.Models.Custom;
@model IPagedList<ProductViewModel>

<div class="dropdown text-right my-2">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Sort By
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <a class="dropdown-item" href="@Request.Url.LocalPath?page=1&sortOrder=Price&descending=true">Price descending</a>
        <a class="dropdown-item" href="@Request.Url.LocalPath?page=1&sortOrder=Price&descending=false">Price</a>
        <a class="dropdown-item" href="@Request.Url.LocalPath?page=1&sortOrder=Name&descending=true">Name descending</a>
        <a class="dropdown-item" href="@Request.Url.LocalPath?page=1&sortOrder=Name&descending=false">Name</a>
        <a class="dropdown-item" href="@Request.Url.LocalPath?page=1&sortOrder=CatalogNumber&descending=true">Catalog Number descending</a>
        <a class="dropdown-item" href="@Request.Url.LocalPath?page=1&sortOrder=CatalogNumber&descending=false">Catalog Number</a>
    </div>
</div>

<div class="card-columns">
    @foreach (var product in Model)
    {
        <div class="card">
            <a href="@Url.Action("Details", "Product", new { id = product.Id, name = product.Name })">
                <div class="w-100">
                    <img id="ImgPreview" class="card-img-top" alt="@product.Name Price: @product.Price.ToString() @Html.Settings().Currency"
                         src="@Url.Action("GetImage", "Product", new { product.Id })" />
                </div>
                <div class="card-body text-center">
                    <h5 class="card-title">@product.Name</h5>
                    <h4 class="card-title">@product.Price @Html.Settings().Currency</h4>
                </div>
            </a>
            <div class="card-body text-center p-0 pb-4">
                @if (product.NumberInStock == 0)
                {
                    <button class="btn btn-danger" disabled>Out of stock!</button>
                }
                else
                {
                    using (Html.BeginForm("AddItem", "Cart", new { id = product.Id }, FormMethod.Post, new { @class = "d-inline" }))
                    {
                        @Html.AntiForgeryToken()
                        <button class="btn btn-success" type="submit">Add to Cart</button>
                    }
                }
            </div>
        </div>
    }
</div>

@Html.PagedListPager((IPagedList)Model, page => { return (Request.Url.LocalPath + "?page=" + page + "&sortOrder=" + SortingManager.SortOrder + "&descending=" + SortingManager.IsSortDescending); }, new PagedListRenderOptions
{
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" },
    UlElementClasses = new string[] { "pagination justify-content-center" },
    LinkToFirstPageFormat = "<<",
    LinkToPreviousPageFormat = "<",
    LinkToNextPageFormat = ">",
    LinkToLastPageFormat = ">>",
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
    MaximumPageNumbersToDisplay = 10
})